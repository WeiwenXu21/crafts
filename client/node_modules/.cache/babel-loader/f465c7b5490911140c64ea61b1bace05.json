{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Swatch = void 0;\n\nvar converter_1 = require(\"./converter\");\n\nvar Swatch =\n/** @class */\nfunction () {\n  function Swatch(rgb, population) {\n    this._rgb = rgb;\n    this._population = population;\n  }\n\n  Swatch.applyFilters = function (colors, filters) {\n    return filters.length > 0 ? colors.filter(function (_a) {\n      var r = _a.r,\n          g = _a.g,\n          b = _a.b;\n\n      for (var j = 0; j < filters.length; j++) {\n        if (!filters[j](r, g, b, 255)) return false;\n      }\n\n      return true;\n    }) : colors;\n  };\n  /**\n   * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n   * @param {Swatch} swatch\n   */\n\n\n  Swatch.clone = function (swatch) {\n    return new Swatch(swatch._rgb, swatch._population);\n  };\n\n  Object.defineProperty(Swatch.prototype, \"r\", {\n    /**\n     * The red value in the RGB value\n     */\n    get: function () {\n      return this._rgb[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"g\", {\n    /**\n     * The green value in the RGB value\n     */\n    get: function () {\n      return this._rgb[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"b\", {\n    /**\n     * The blue value in the RGB value\n     */\n    get: function () {\n      return this._rgb[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"rgb\", {\n    /**\n     * The color value as a rgb value\n     */\n    get: function () {\n      return this._rgb;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"hsl\", {\n    /**\n     * The color value as a hsl value\n     */\n    get: function () {\n      if (!this._hsl) {\n        var _a = this._rgb,\n            r = _a[0],\n            g = _a[1],\n            b = _a[2];\n        this._hsl = converter_1.rgbToHsl(r, g, b);\n      }\n\n      return this._hsl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"hex\", {\n    /**\n     * The color value as a hex string\n     */\n    get: function () {\n      if (!this._hex) {\n        var _a = this._rgb,\n            r = _a[0],\n            g = _a[1],\n            b = _a[2];\n        this._hex = converter_1.rgbToHex(r, g, b);\n      }\n\n      return this._hex;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"population\", {\n    get: function () {\n      return this._population;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Get the JSON object for the swatch\n   */\n\n  Swatch.prototype.toJSON = function () {\n    return {\n      rgb: this.rgb,\n      population: this.population\n    };\n  };\n  /**\n   * Get the color value as a rgb value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n\n\n  Swatch.prototype.getRgb = function () {\n    return this._rgb;\n  };\n  /**\n   * Get the color value as a hsl value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n\n\n  Swatch.prototype.getHsl = function () {\n    return this.hsl;\n  };\n  /**\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n\n\n  Swatch.prototype.getPopulation = function () {\n    return this._population;\n  };\n  /**\n   * Get the color value as a hex string\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n\n\n  Swatch.prototype.getHex = function () {\n    return this.hex;\n  };\n\n  Swatch.prototype.getYiq = function () {\n    if (!this._yiq) {\n      var rgb = this._rgb;\n      this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    }\n\n    return this._yiq;\n  };\n\n  Object.defineProperty(Swatch.prototype, \"titleTextColor\", {\n    get: function () {\n      if (this._titleTextColor) {\n        this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000';\n      }\n\n      return this._titleTextColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"bodyTextColor\", {\n    get: function () {\n      if (this._bodyTextColor) {\n        this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000';\n      }\n\n      return this._bodyTextColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Swatch.prototype.getTitleTextColor = function () {\n    return this.titleTextColor;\n  };\n\n  Swatch.prototype.getBodyTextColor = function () {\n    return this.bodyTextColor;\n  };\n\n  return Swatch;\n}();\n\nexports.Swatch = Swatch;","map":{"version":3,"sources":["../../../../packages/vibrant-color/src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Swatch = void 0;\nvar converter_1 = require(\"./converter\");\nvar Swatch = /** @class */ (function () {\n    function Swatch(rgb, population) {\n        this._rgb = rgb;\n        this._population = population;\n    }\n    Swatch.applyFilters = function (colors, filters) {\n        return filters.length > 0\n            ? colors.filter(function (_a) {\n                var r = _a.r, g = _a.g, b = _a.b;\n                for (var j = 0; j < filters.length; j++) {\n                    if (!filters[j](r, g, b, 255))\n                        return false;\n                }\n                return true;\n            })\n            : colors;\n    };\n    /**\n     * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n     * @param {Swatch} swatch\n     */\n    Swatch.clone = function (swatch) {\n        return new Swatch(swatch._rgb, swatch._population);\n    };\n    Object.defineProperty(Swatch.prototype, \"r\", {\n        /**\n         * The red value in the RGB value\n         */\n        get: function () {\n            return this._rgb[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"g\", {\n        /**\n         * The green value in the RGB value\n         */\n        get: function () {\n            return this._rgb[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"b\", {\n        /**\n         * The blue value in the RGB value\n         */\n        get: function () {\n            return this._rgb[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"rgb\", {\n        /**\n         * The color value as a rgb value\n         */\n        get: function () {\n            return this._rgb;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"hsl\", {\n        /**\n         * The color value as a hsl value\n         */\n        get: function () {\n            if (!this._hsl) {\n                var _a = this._rgb, r = _a[0], g = _a[1], b = _a[2];\n                this._hsl = converter_1.rgbToHsl(r, g, b);\n            }\n            return this._hsl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"hex\", {\n        /**\n         * The color value as a hex string\n         */\n        get: function () {\n            if (!this._hex) {\n                var _a = this._rgb, r = _a[0], g = _a[1], b = _a[2];\n                this._hex = converter_1.rgbToHex(r, g, b);\n            }\n            return this._hex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"population\", {\n        get: function () {\n            return this._population;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the JSON object for the swatch\n     */\n    Swatch.prototype.toJSON = function () {\n        return {\n            rgb: this.rgb,\n            population: this.population\n        };\n    };\n    /**\n     * Get the color value as a rgb value\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getRgb = function () {\n        return this._rgb;\n    };\n    /**\n     * Get the color value as a hsl value\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getHsl = function () {\n        return this.hsl;\n    };\n    /**\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getPopulation = function () {\n        return this._population;\n    };\n    /**\n     * Get the color value as a hex string\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getHex = function () {\n        return this.hex;\n    };\n    Swatch.prototype.getYiq = function () {\n        if (!this._yiq) {\n            var rgb = this._rgb;\n            this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n        }\n        return this._yiq;\n    };\n    Object.defineProperty(Swatch.prototype, \"titleTextColor\", {\n        get: function () {\n            if (this._titleTextColor) {\n                this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000';\n            }\n            return this._titleTextColor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"bodyTextColor\", {\n        get: function () {\n            if (this._bodyTextColor) {\n                this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000';\n            }\n            return this._bodyTextColor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Swatch.prototype.getTitleTextColor = function () {\n        return this.titleTextColor;\n    };\n    Swatch.prototype.getBodyTextColor = function () {\n        return this.bodyTextColor;\n    };\n    return Swatch;\n}());\nexports.Swatch = Swatch;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}