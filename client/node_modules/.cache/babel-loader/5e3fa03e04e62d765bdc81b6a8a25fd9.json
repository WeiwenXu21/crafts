{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/weiwenxu/COMP/github/react/reactBootcamp/crafts/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Signin from './Signin';\nimport Spinner from './Spinner';\nimport { API_URL } from './config';\nimport './App.css';\nimport * as Vibrant from 'node-vibrant';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // images: [],\n      info: [],\n      email: '',\n      password: '',\n      first: '',\n      last: '',\n      checkaccount: false,\n      signup: false,\n      login: true\n    };\n\n    this.handleSubmit = e => {\n      // alert('A name was submitted: '+ this.state.email);\n      console.log('A name was submitted: ' + this.state.info);\n      this.setState({\n        checkaccount: true\n      }); // console.log(e.target.elements.username.value)\n      // console.log(e.target.username.value)\n      // console.log(this.inputNode.value)\n      // const files = Array.from(e.target.files)\n      // this.setState({ uploading: true })\n      // const formData = new FormData()\n      // files.forEach((file, i) => {\n      //   formData.append(i, file)\n      // })\n      // fetch(`${API_URL}/image-upload`, {\n      //   method: 'POST',\n      //   body: formData\n      // })\n      // .then(res => res.json())\n      // .then(images => {\n      //   this.setState({\n      //     uploading: false,\n      //     images\n      //   })\n      // })\n    };\n\n    this.handleChange = e => {\n      switch (e.target.id) {\n        case \"first\":\n          this.setState({\n            first: e.target.value\n          });\n\n        case \"last\":\n          this.setState({\n            last: e.target.value\n          });\n\n        case \"email\":\n          // alert('A name was submitted: '+e.target.value);\n          this.setState({\n            email: e.target.value // checkaccount: true\n\n          });\n\n        case \"password\":\n          this.setState({\n            password: e.target.value\n          });\n      }\n\n      var newinfo = this.state.info.push(e.target.value);\n      this.setState({\n        info: newinfo\n      });\n    };\n\n    this.removeImage = id => {// this.setState({\n      //   images: this.state.images.filter(image => image.public_id !== id)\n      // })\n    };\n\n    this.switch = word => {\n      var signup, login;\n\n      if (word == \"signup\") {\n        signup = true;\n        login = false;\n      } else {\n        login = true;\n        signup = false;\n      }\n\n      return this.setState({\n        login: login,\n        signup: signup\n      });\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      first,\n      last,\n      checkaccount,\n      signup,\n      login\n    } = this.state;\n\n    const content = () => {\n      switch (true) {\n        case checkaccount:\n          return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 18\n          }, this);\n        // case images.length > 0:\n        //   return <Images images={images} removeImage={this.removeImage} />\n\n        default:\n          // return <Buttons onChange={this.onChange} /> , this.handleSubmit\n          return /*#__PURE__*/_jsxDEV(Signin, {\n            switch: this.switch,\n            signup: signup,\n            login: login,\n            onChange: this.handleChange,\n            onSubmit: this.handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 18\n          }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: content()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/weiwenxu/COMP/github/react/reactBootcamp/crafts/client/src/App.js"],"names":["React","Component","Signin","Spinner","API_URL","Vibrant","App","state","info","email","password","first","last","checkaccount","signup","login","handleSubmit","e","console","log","setState","handleChange","target","id","value","newinfo","push","removeImage","switch","word","render","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Signin from './Signin';\nimport Spinner from './Spinner';\nimport { API_URL } from './config';\nimport './App.css';\nimport * as Vibrant from 'node-vibrant'\n\n\nexport default class App extends Component {\n\n  state = {\n    // images: [],\n    info : [],\n    email: '', \n    password: '', \n    first: '', \n    last: '',\n    checkaccount: false,\n    signup: false,\n    login: true\n  }\n\n  handleSubmit = e => {\n    // alert('A name was submitted: '+ this.state.email);\n    console.log('A name was submitted: '+ this.state.info);\n    this.setState({\n        checkaccount: true\n        })\n    \n    // console.log(e.target.elements.username.value)\n    // console.log(e.target.username.value)\n    // console.log(this.inputNode.value)\n\n\n    // const files = Array.from(e.target.files)\n    // this.setState({ uploading: true })\n\n    // const formData = new FormData()\n\n    // files.forEach((file, i) => {\n    //   formData.append(i, file)\n    // })\n\n    // fetch(`${API_URL}/image-upload`, {\n    //   method: 'POST',\n    //   body: formData\n    // })\n    // .then(res => res.json())\n    // .then(images => {\n    //   this.setState({\n    //     uploading: false,\n    //     images\n    //   })\n    // })\n  }\n\n handleChange = e => {\n      switch(e.target.id) {\n        case \"first\":\n            this.setState({\n                first : e.target.value,\n                })\n            \n        case \"last\":\n            this.setState({\n                last : e.target.value\n                })\n        case \"email\":\n            // alert('A name was submitted: '+e.target.value);\n            this.setState({\n                email : e.target.value,\n                // checkaccount: true\n                })\n        case \"password\":\n            this.setState({\n                password : e.target.value\n                })\n      }\n      \n      var newinfo = this.state.info.push(e.target.value);\n      this.setState({info:newinfo})\n  }\n\n  removeImage = id => {\n    // this.setState({\n    //   images: this.state.images.filter(image => image.public_id !== id)\n    // })\n  }\n\n  switch = word => {\n    var signup,login;\n    if(word == \"signup\"){signup = true;login = false;}\n    else{login = true; signup = false;}\n    return this.setState({login:login,signup:signup})\n  }\n\n  render() {\n    const { email, password, first, last, checkaccount, signup, login } = this.state\n\n    const content = () => {\n      switch(true) {\n        case checkaccount:\n          return <Spinner />\n        // case images.length > 0:\n        //   return <Images images={images} removeImage={this.removeImage} />\n        default:\n          // return <Buttons onChange={this.onChange} /> , this.handleSubmit\n          return <Signin switch={this.switch} signup={signup} login={login} onChange={this.handleChange} onSubmit={this.handleSubmit}/>\n      }\n    }\n\n    return (\n      <div>\n        <div className='buttons'>\n          {content()}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}