{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerPipeline = void 0;\n\nvar worker_1 = __importDefault(require(\"@vibrant/worker\"));\n\nvar color_1 = require(\"@vibrant/color\");\n\nvar utils_1 = require(\"../../utils\");\n/**\n * Client side (runs in UI thread)\n */\n\n\nvar WorkerPipeline =\n/** @class */\nfunction () {\n  function WorkerPipeline(PipelineWorker) {\n    this.PipelineWorker = PipelineWorker;\n    this._manager = new worker_1.default();\n\n    this._manager.register('pipeline', PipelineWorker);\n  }\n\n  WorkerPipeline.prototype._rehydrate = function (result) {\n    var colors = result.colors,\n        palettes = result.palettes;\n    result.colors = colors.map(function (s) {\n      return color_1.Swatch.clone(s);\n    });\n    result.palettes = utils_1.mapValues(palettes, function (p) {\n      return utils_1.mapValues(p, function (c) {\n        return c ? color_1.Swatch.clone(c) : null;\n      });\n    });\n    return result;\n  };\n\n  WorkerPipeline.prototype.process = function (imageData, opts) {\n    var _this = this;\n\n    return this._manager.invokeWorker('pipeline', [imageData, opts], [imageData.data.buffer]).then(function (result) {\n      return _this._rehydrate(result);\n    });\n  };\n\n  return WorkerPipeline;\n}();\n\nexports.WorkerPipeline = WorkerPipeline;","map":{"version":3,"sources":["../../../../../../packages/vibrant-core/src/pipeline/worker/client.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,cAAA;AAAA;AAAA,YAAA;AAEE,WAAA,cAAA,CAAuB,cAAvB,EAAsD;AAA/B,SAAA,cAAA,GAAA,cAAA;AADf,SAAA,QAAA,GAAW,IAAI,QAAA,CAAA,OAAJ,EAAX;;AAEN,SAAK,QAAL,CAAc,QAAd,CAAuB,UAAvB,EAAmC,cAAnC;AACD;;AACO,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAR,UAAoB,MAApB,EAAyC;AACjC,QAAA,MAAM,GAAe,MAAM,CAArB,MAAN;AAAA,QAAQ,QAAQ,GAAK,MAAM,CAAX,QAAhB;AACN,IAAA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,GAAP,CAAW,UAAC,CAAD,EAAE;AAAK,aAAA,OAAA,CAAA,MAAA,CAAO,KAAP,CAAA,CAAA,CAAA;AAAe,KAAjC,CAAhB;AAEA,IAAA,MAAM,CAAC,QAAP,GAAkB,OAAA,CAAA,SAAA,CAAU,QAAV,EAAoB,UAAC,CAAD,EAAE;AAAK,aAAA,OAAA,CAAA,SAAA,CAAU,CAAV,EAAa,UAAC,CAAD,EAAE;AAAK,eAAA,CAAC,GAAG,OAAA,CAAA,MAAA,CAAO,KAAP,CAAa,CAAb,CAAH,GAAD,IAAA;AAApB,OAAA,CAAA;AAA0D,KAArF,CAAlB;AACA,WAAO,MAAP;AACD,GANO;;AAOR,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAS,SAAT,EAA+B,IAA/B,EAAmD;AAAnD,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,QAAL,CAAc,YAAd,CAA2B,UAA3B,EAAuC,CAAC,SAAD,EAAY,IAAZ,CAAvC,EAA0D,CAAC,SAAS,CAAC,IAAV,CAAe,MAAhB,CAA1D,EACJ,IADI,CACC,UAAC,MAAD,EAAO;AAAK,aAAA,KAAI,CAAC,UAAL,CAAA,MAAA,CAAA;AAAwC,KADrD,CAAP;AAED,GAHD;;AAIF,SAAA,cAAA;AAAC,CAhBD,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerPipeline = void 0;\nvar worker_1 = __importDefault(require(\"@vibrant/worker\"));\nvar color_1 = require(\"@vibrant/color\");\nvar utils_1 = require(\"../../utils\");\n/**\n * Client side (runs in UI thread)\n */\nvar WorkerPipeline = /** @class */ (function () {\n    function WorkerPipeline(PipelineWorker) {\n        this.PipelineWorker = PipelineWorker;\n        this._manager = new worker_1.default();\n        this._manager.register('pipeline', PipelineWorker);\n    }\n    WorkerPipeline.prototype._rehydrate = function (result) {\n        var colors = result.colors, palettes = result.palettes;\n        result.colors = colors.map(function (s) { return color_1.Swatch.clone(s); });\n        result.palettes = utils_1.mapValues(palettes, function (p) { return utils_1.mapValues(p, function (c) { return c ? color_1.Swatch.clone(c) : null; }); });\n        return result;\n    };\n    WorkerPipeline.prototype.process = function (imageData, opts) {\n        var _this = this;\n        return this._manager.invokeWorker('pipeline', [imageData, opts], [imageData.data.buffer])\n            .then(function (result) { return _this._rehydrate(result); });\n    };\n    return WorkerPipeline;\n}());\nexports.WorkerPipeline = WorkerPipeline;\n//# sourceMappingURL=client.js.map"]},"metadata":{},"sourceType":"script"}