{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Histogram =\n/** @class */\nfunction () {\n  function Histogram(pixels, opts) {\n    this.pixels = pixels;\n    this.opts = opts;\n    var sigBits = opts.sigBits;\n\n    var getColorIndex = function (r, g, b) {\n      return (r << 2 * sigBits) + (g << sigBits) + b;\n    };\n\n    this.getColorIndex = getColorIndex;\n    var rshift = 8 - sigBits;\n    var hn = 1 << 3 * sigBits;\n    var hist = new Uint32Array(hn);\n    var rmax;\n    var rmin;\n    var gmax;\n    var gmin;\n    var bmax;\n    var bmin;\n    var r;\n    var g;\n    var b;\n    var a;\n    rmax = gmax = bmax = 0;\n    rmin = gmin = bmin = Number.MAX_VALUE;\n    var n = pixels.length / 4;\n    var i = 0;\n\n    while (i < n) {\n      var offset = i * 4;\n      i++;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3]; // Ignored pixels' alpha is marked as 0 in filtering stage\n\n      if (a === 0) continue;\n      r = r >> rshift;\n      g = g >> rshift;\n      b = b >> rshift;\n      var index = getColorIndex(r, g, b);\n      hist[index] += 1;\n      if (r > rmax) rmax = r;\n      if (r < rmin) rmin = r;\n      if (g > gmax) gmax = g;\n      if (g < gmin) gmin = g;\n      if (b > bmax) bmax = b;\n      if (b < bmin) bmin = b;\n    }\n\n    this._colorCount = hist.reduce(function (total, c) {\n      return c > 0 ? total + 1 : total;\n    }, 0);\n    this.hist = hist;\n    this.rmax = rmax;\n    this.rmin = rmin;\n    this.gmax = gmax;\n    this.gmin = gmin;\n    this.bmax = bmax;\n    this.bmin = bmin;\n  }\n\n  Object.defineProperty(Histogram.prototype, \"colorCount\", {\n    get: function () {\n      return this._colorCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Histogram;\n}();\n\nexports.default = Histogram;","map":{"version":3,"sources":["../../../../packages/vibrant-image/src/histogram.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Histogram = /** @class */ (function () {\n    function Histogram(pixels, opts) {\n        this.pixels = pixels;\n        this.opts = opts;\n        var sigBits = opts.sigBits;\n        var getColorIndex = function (r, g, b) {\n            return (r << (2 * sigBits)) + (g << sigBits) + b;\n        };\n        this.getColorIndex = getColorIndex;\n        var rshift = 8 - sigBits;\n        var hn = 1 << (3 * sigBits);\n        var hist = new Uint32Array(hn);\n        var rmax;\n        var rmin;\n        var gmax;\n        var gmin;\n        var bmax;\n        var bmin;\n        var r;\n        var g;\n        var b;\n        var a;\n        rmax = gmax = bmax = 0;\n        rmin = gmin = bmin = Number.MAX_VALUE;\n        var n = pixels.length / 4;\n        var i = 0;\n        while (i < n) {\n            var offset = i * 4;\n            i++;\n            r = pixels[offset + 0];\n            g = pixels[offset + 1];\n            b = pixels[offset + 2];\n            a = pixels[offset + 3];\n            // Ignored pixels' alpha is marked as 0 in filtering stage\n            if (a === 0)\n                continue;\n            r = r >> rshift;\n            g = g >> rshift;\n            b = b >> rshift;\n            var index = getColorIndex(r, g, b);\n            hist[index] += 1;\n            if (r > rmax)\n                rmax = r;\n            if (r < rmin)\n                rmin = r;\n            if (g > gmax)\n                gmax = g;\n            if (g < gmin)\n                gmin = g;\n            if (b > bmax)\n                bmax = b;\n            if (b < bmin)\n                bmin = b;\n        }\n        this._colorCount = hist.reduce(function (total, c) { return c > 0 ? total + 1 : total; }, 0);\n        this.hist = hist;\n        this.rmax = rmax;\n        this.rmin = rmin;\n        this.gmax = gmax;\n        this.gmin = gmin;\n        this.bmax = bmax;\n        this.bmin = bmin;\n    }\n    Object.defineProperty(Histogram.prototype, \"colorCount\", {\n        get: function () { return this._colorCount; },\n        enumerable: false,\n        configurable: true\n    });\n    return Histogram;\n}());\nexports.default = Histogram;\n//# sourceMappingURL=histogram.js.map"]},"metadata":{},"sourceType":"script"}