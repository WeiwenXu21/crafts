{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BasicPipeline = exports.Stage = void 0;\n\nvar image_1 = require(\"@vibrant/image\");\n\nvar Stage =\n/** @class */\nfunction () {\n  function Stage(pipeline) {\n    this.pipeline = pipeline;\n    this._map = {};\n  }\n\n  Stage.prototype.names = function () {\n    return Object.keys(this._map);\n  };\n\n  Stage.prototype.has = function (name) {\n    return !!this._map[name];\n  };\n\n  Stage.prototype.get = function (name) {\n    return this._map[name];\n  };\n\n  Stage.prototype.register = function (name, stageFn) {\n    this._map[name] = stageFn;\n    return this.pipeline;\n  };\n\n  return Stage;\n}();\n\nexports.Stage = Stage;\n\nvar BasicPipeline =\n/** @class */\nfunction () {\n  function BasicPipeline() {\n    this.filter = new Stage(this);\n    this.quantizer = new Stage(this);\n    this.generator = new Stage(this);\n  }\n\n  BasicPipeline.prototype._buildProcessTasks = function (_a) {\n    var _this = this;\n\n    var filters = _a.filters,\n        quantizer = _a.quantizer,\n        generators = _a.generators; // Support wildcard for generators\n\n    if (generators.length === 1 && generators[0] === '*') {\n      generators = this.generator.names();\n    }\n\n    return {\n      filters: filters.map(function (f) {\n        return createTask(_this.filter, f);\n      }),\n      quantizer: createTask(this.quantizer, quantizer),\n      generators: generators.map(function (g) {\n        return createTask(_this.generator, g);\n      })\n    };\n\n    function createTask(stage, o) {\n      var name;\n      var options;\n\n      if (typeof o === 'string') {\n        name = o;\n      } else {\n        name = o.name;\n        options = o.options;\n      }\n\n      return {\n        name: name,\n        fn: stage.get(name),\n        options: options\n      };\n    }\n  };\n\n  BasicPipeline.prototype.process = function (imageData, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, filters, quantizer, generators, imageFilterData, colors, palettes;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this._buildProcessTasks(opts), filters = _a.filters, quantizer = _a.quantizer, generators = _a.generators;\n            return [4\n            /*yield*/\n            , this._filterColors(filters, imageData)];\n\n          case 1:\n            imageFilterData = _b.sent();\n            return [4\n            /*yield*/\n            , this._generateColors(quantizer, imageFilterData)];\n\n          case 2:\n            colors = _b.sent();\n            return [4\n            /*yield*/\n            , this._generatePalettes(generators, colors)];\n\n          case 3:\n            palettes = _b.sent();\n            return [2\n            /*return*/\n            , {\n              colors: colors,\n              palettes: palettes\n            }];\n        }\n      });\n    });\n  };\n\n  BasicPipeline.prototype._filterColors = function (filters, imageData) {\n    return Promise.resolve(image_1.applyFilters(imageData, filters.map(function (_a) {\n      var fn = _a.fn;\n      return fn;\n    })));\n  };\n\n  BasicPipeline.prototype._generateColors = function (quantizer, imageData) {\n    return Promise.resolve(quantizer.fn(imageData.data, quantizer.options));\n  };\n\n  BasicPipeline.prototype._generatePalettes = function (generators, colors) {\n    return __awaiter(this, void 0, void 0, function () {\n      var promiseArr;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(generators.map(function (_a) {\n              var fn = _a.fn,\n                  options = _a.options;\n              return Promise.resolve(fn(colors, options));\n            })) // Map the values to the expected name\n            ];\n\n          case 1:\n            promiseArr = _a.sent(); // Map the values to the expected name\n\n            return [2\n            /*return*/\n            , Promise.resolve(promiseArr.reduce(function (promises, promiseVal, i) {\n              promises[generators[i].name] = promiseVal;\n              return promises;\n            }, {}))];\n        }\n      });\n    });\n  };\n\n  return BasicPipeline;\n}();\n\nexports.BasicPipeline = BasicPipeline;","map":{"version":3,"sources":["../../../../../packages/vibrant-core/src/pipeline/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicPipeline = exports.Stage = void 0;\nvar image_1 = require(\"@vibrant/image\");\nvar Stage = /** @class */ (function () {\n    function Stage(pipeline) {\n        this.pipeline = pipeline;\n        this._map = {};\n    }\n    Stage.prototype.names = function () {\n        return Object.keys(this._map);\n    };\n    Stage.prototype.has = function (name) {\n        return !!this._map[name];\n    };\n    Stage.prototype.get = function (name) {\n        return this._map[name];\n    };\n    Stage.prototype.register = function (name, stageFn) {\n        this._map[name] = stageFn;\n        return this.pipeline;\n    };\n    return Stage;\n}());\nexports.Stage = Stage;\nvar BasicPipeline = /** @class */ (function () {\n    function BasicPipeline() {\n        this.filter = new Stage(this);\n        this.quantizer = new Stage(this);\n        this.generator = new Stage(this);\n    }\n    BasicPipeline.prototype._buildProcessTasks = function (_a) {\n        var _this = this;\n        var filters = _a.filters, quantizer = _a.quantizer, generators = _a.generators;\n        // Support wildcard for generators\n        if (generators.length === 1 && generators[0] === '*') {\n            generators = this.generator.names();\n        }\n        return {\n            filters: filters.map(function (f) { return createTask(_this.filter, f); }),\n            quantizer: createTask(this.quantizer, quantizer),\n            generators: generators.map(function (g) { return createTask(_this.generator, g); })\n        };\n        function createTask(stage, o) {\n            var name;\n            var options;\n            if (typeof o === 'string') {\n                name = o;\n            }\n            else {\n                name = o.name;\n                options = o.options;\n            }\n            return {\n                name: name,\n                fn: stage.get(name),\n                options: options\n            };\n        }\n    };\n    BasicPipeline.prototype.process = function (imageData, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, filters, quantizer, generators, imageFilterData, colors, palettes;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this._buildProcessTasks(opts), filters = _a.filters, quantizer = _a.quantizer, generators = _a.generators;\n                        return [4 /*yield*/, this._filterColors(filters, imageData)];\n                    case 1:\n                        imageFilterData = _b.sent();\n                        return [4 /*yield*/, this._generateColors(quantizer, imageFilterData)];\n                    case 2:\n                        colors = _b.sent();\n                        return [4 /*yield*/, this._generatePalettes(generators, colors)];\n                    case 3:\n                        palettes = _b.sent();\n                        return [2 /*return*/, {\n                                colors: colors,\n                                palettes: palettes\n                            }];\n                }\n            });\n        });\n    };\n    BasicPipeline.prototype._filterColors = function (filters, imageData) {\n        return Promise.resolve(image_1.applyFilters(imageData, filters.map(function (_a) {\n            var fn = _a.fn;\n            return fn;\n        })));\n    };\n    BasicPipeline.prototype._generateColors = function (quantizer, imageData) {\n        return Promise.resolve(quantizer.fn(imageData.data, quantizer.options));\n    };\n    BasicPipeline.prototype._generatePalettes = function (generators, colors) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promiseArr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(generators.map(function (_a) {\n                            var fn = _a.fn, options = _a.options;\n                            return Promise.resolve(fn(colors, options));\n                        }))\n                        // Map the values to the expected name\n                    ];\n                    case 1:\n                        promiseArr = _a.sent();\n                        // Map the values to the expected name\n                        return [2 /*return*/, Promise.resolve(promiseArr.reduce(function (promises, promiseVal, i) {\n                                promises[generators[i].name] = promiseVal;\n                                return promises;\n                            }, {}))];\n                }\n            });\n        });\n    };\n    return BasicPipeline;\n}());\nexports.BasicPipeline = BasicPipeline;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}