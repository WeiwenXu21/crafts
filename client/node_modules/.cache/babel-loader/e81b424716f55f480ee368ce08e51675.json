{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/weiwenxu/COMP/github/react/reactBootcamp/crafts/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Spinner from './Spinner';\nimport Images from './Images';\nimport Buttons from './Buttons';\nimport Signin from './Signin';\nimport { API_URL } from './config';\nimport './App.css';\nimport * as Vibrant from 'node-vibrant';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uploading: false,\n      images: [],\n      signup: false,\n      login: true\n    };\n\n    this.onChange = e => {\n      const files = Array.from(e.target.files);\n      this.setState({\n        uploading: true\n      });\n      const formData = new FormData();\n      files.forEach((file, i) => {\n        formData.append(i, file);\n      });\n      fetch(`${API_URL}/image-upload`, {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(images => {\n        this.setState({\n          uploading: false,\n          images\n        });\n      });\n    };\n\n    this.removeImage = id => {\n      this.setState({\n        images: this.state.images.filter(image => image.public_id !== id)\n      });\n    };\n\n    this.switch = word => {\n      var signup, login;\n\n      if (word == \"signup\") {\n        signup = true;\n        login = false;\n      } else {\n        login = true;\n        signup = false;\n      }\n\n      return this.setState({\n        login: login,\n        signup: signup\n      });\n    };\n  }\n\n  render() {\n    const {\n      uploading,\n      images,\n      signup,\n      login\n    } = this.state;\n\n    const content = () => {\n      switch (true) {\n        case uploading:\n          return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 18\n          }, this);\n\n        case images.length > 0:\n          return /*#__PURE__*/_jsxDEV(Images, {\n            images: images,\n            removeImage: this.removeImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }, this);\n\n        default:\n          // return <Buttons onChange={this.onChange} />\n          return /*#__PURE__*/_jsxDEV(Signin, {\n            switch: this.switch,\n            signup: signup,\n            login: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 18\n          }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: content()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/weiwenxu/COMP/github/react/reactBootcamp/crafts/client/src/App.js"],"names":["React","Component","Spinner","Images","Buttons","Signin","API_URL","Vibrant","App","state","uploading","images","signup","login","onChange","e","files","Array","from","target","setState","formData","FormData","forEach","file","i","append","fetch","method","body","then","res","json","removeImage","id","filter","image","public_id","switch","word","render","content","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from './Spinner';\nimport Images from './Images';\nimport Buttons from './Buttons';\nimport Signin from './Signin';\nimport { API_URL } from './config';\nimport './App.css';\nimport * as Vibrant from 'node-vibrant'\n\n\nexport default class App extends Component {\n\n  state = {\n    uploading: false,\n    images: [],\n    signup: false,\n    login: true\n  }\n\n  onChange = e => {\n    const files = Array.from(e.target.files)\n    this.setState({ uploading: true })\n\n    const formData = new FormData()\n\n    files.forEach((file, i) => {\n      formData.append(i, file)\n    })\n\n    fetch(`${API_URL}/image-upload`, {\n      method: 'POST',\n      body: formData\n    })\n    .then(res => res.json())\n    .then(images => {\n      this.setState({\n        uploading: false,\n        images\n      })\n    })\n  }\n\n  removeImage = id => {\n    this.setState({\n      images: this.state.images.filter(image => image.public_id !== id)\n    })\n  }\n\n  switch = word => {\n    var signup,login;\n    if(word == \"signup\"){signup = true;login = false;}\n    else{login = true; signup = false;}\n    return this.setState({login:login,signup:signup})\n  }\n\n  render() {\n    const { uploading, images, signup, login } = this.state\n\n    const content = () => {\n      switch(true) {\n        case uploading:\n          return <Spinner />\n        case images.length > 0:\n          return <Images images={images} removeImage={this.removeImage} />\n        default:\n          // return <Buttons onChange={this.onChange} />\n          return <Signin switch={this.switch} signup={signup} login={login}/>\n      }\n    }\n\n    return (\n      <div>\n        <div className='buttons'>\n          {content()}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}